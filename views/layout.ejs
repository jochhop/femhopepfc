<!DOCTYPE html>
<html>
  <head>
    <title>Femhope</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="keywords" content="maltrato, mujer, violencia, género, organizaciones, femhope" >
    <meta name="description" content="Femhope ofrece una completa lista de organizaciones para la ayuda contra la violencia de género." >
    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap-theme.min.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/datatables/jquery.dataTables.css">
    <link rel="stylesheet" href="/styles/datatables/jquery.dataTables.min.css">
    <link rel="stylesheet" href="/styles/datatables/jquery.dataTables_themeroller.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/local.css">
    <link rel="stylesheet" href="/styles/responsive.css">
    <!--STYLES END-->

    <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAU18qK_Ouq23XL7hYLK2vWhNq7ILDaUxA&sensor=false">
    </script>
    
    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/jquery-1.11.1.min.js"></script>
    <script src="/js/bootstrap/bootstrap.min.js"></script>
    <script src="/js/dataTables/jquery.dataTables.min.js"></script>
    <script src="/js/form-actions.js"></script>
    <script src="/js/gmaps.js"></script>
    <script src="/js/jquery-masks.js"></script>
    <script src="/js/jquery-validator.js"></script>
    <script src="/js/jquery-validatorextra.js"></script>
    <script src="/js/masks.js"></script>
    <script src="/js/validator.js"></script>
    <!--SCRIPTS END-->
    <% if(session.User && session.User != 2){ %>
      <script type="text/javascript">
          var getMessagesCounter = function() {
              console.log("Request");
              jQuery.ajax({
                url: '/message/counter',
                type: 'get',
                success: function(result) {
                  if(typeof(result['status']) !== 'undefined' && result['status'] == 'ok'){
                    jQuery(".message-counter").text(result['messagesCounter']);
                  }
                }
              });
          };

          var interval = 1000 * 60 * 1;

          setInterval(getMessagesCounter, interval);
      </script>
    <% } %>
  </head>

  <body>
    <nav class="navbar navbar-inverse" role="navigation">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">FemHope</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav navbar-right">
            <% if(!session.authenticated){ %>
            <li>
              <form class="navbar-form" action="/session/create" method="POST" id="loginForm">
                <div class="form-group">
                  <input name="email" type="text" class="form-control input-sm" placeholder="Email">
                  <input name="password" type="password" class="form-control input-sm" placeholder="Contraseña">
                </div>
                <button type="submit" title="Inicia sesión" class="btn btn-info btn-sm">
                  <span class="glyphicon glyphicon-off"></span>
                </button>
                <input type="hidden" name="_csrf" value="<%= _csrf %>" />
              </form>
            </li>
            <li>
              <a class="dropdown-toggle" data-toggle="dropdown">
                Crear cuenta
                <span class="caret"></span>
              </a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="/user/register">Como usuario</a></li>
                <li><a href="/organization/register">Como organización</a></li>
              </ul>
            </li>
            <% }else{ %>
            <% if(session.User.rol == 0){ %>
              <li>
                <a href="/user/messages?id=<%= session.User.id %>" title="Mensajes sin leer"><span class="glyphicon glyphicon-envelope"></span> <span class="badge message-counter"><%= session.messagesCounter %></span></a>
              </li>
            <% } %>
            <% if(session.User.rol == 1){ %>
              <li>
                <a href="/organization/messages?id=<%= session.User.id %>" title="Mensajes sin leer"><span class="glyphicon glyphicon-envelope"></span> <span class="badge message-counter"><%= session.messagesCounter %></span></a>
              </li>
            <% } %> 
            <li class="dropdown">
              <% if(session.User.surname){ %>
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" style="background-image:url('../images/<%= session.User.avatar %>');background-repeat:no-repeat;background-position:left;background-size:25px;padding-left:30px;"><%= session.User.name+' '+session.User.surname %> <span class="caret"></span></a>
              <% }else{ %>
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" style="background-image:url('../images/<%= session.User.avatar %>');background-repeat:no-repeat;background-position:left;background-size:25px;padding-left:30px;"><%= session.User.name %> <span class="caret"></span></a>
              <% } %>
              <ul class="dropdown-menu" role="menu">
                <% if(session.User.rol == 0){ %>
                  <li><a href="/user/view?id=<%= session.User.id %>">Mi perfil</a></li>
                <% }else{ %>
                  <% if(session.User.rol == 1){ %>
                    <li><a href="/organization/view?id=<%= session.User.id %>">Mi perfil</a></li>
                  <% }else{ %>
                      <li><a href="/admin/index" target="_blank">Panel de control</a></li>
                  <% } %>
                <% } %>
                <li class="divider"></li>
                <li><a href="/session/destroy">Cerrar sesión</a></li>
              </ul>
            </li>
            <% } %>
            
            <li>
              <a href="/organization/viewall">
                <span class="glyphicon glyphicon-list hidden-lg hidden-md" title="Ver todas las organizaciones"></span>
                <span class="visible-lg visible-md">Organizaciones</span>
              </a>
            </li>
            <li>
              <a id="searchButton">
                <span class="glyphicon glyphicon-search" title="Iniciar búsqueda"></span>
              </a>
            </li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>
    <nav class="navbar" role="navigation" id="searchBar" style="display:none;">
      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <form class="navbar-form navbar-right" role="search">
            <div class="form-group">
              <input type="search" id="searchInput" class="form-control input-sm" placeholder="Buscar...">
            </div>
            <!-- <button type="submit" class="btn btn-default btn-sm">Buscar</button> -->
            <ul id="autocompleteBlock">
            </ul>
          </form>
      </div>
    </nav>
    <!-- Global messages -->
    <% if(typeof flash != 'undefined' && flash.error){ %>
        <div class="alert alert-danger messages"><%= flash.error %></div>
    <% } %>
    <% if(typeof flash != 'undefined' && flash.success){ %>
        <div class="alert alert-success messages"><%= flash.success %></div>
    <% } %>
    <% if(typeof flash != 'undefined' && flash.info){ %>
        <div class="alert alert-info messages"><%= flash.info %></div>
    <% } %>
    
    <%- body %>

    <footer>
      <p class="footer-title">
        <img src="/images/logo_bn.png"></img>Proyecto FemHope
      </p>
      <p>
        José Ortega Calahorro · Universidad de Jaén · Politécnica Superior
      </p>
    </footer>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
    
  </body>
</html>
